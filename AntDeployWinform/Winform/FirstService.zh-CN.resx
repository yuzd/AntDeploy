<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label1.Text" xml:space="preserve">
    <value>您填写的服务名称在远程服务器没有找到，如果您想要新创建的话，请填写下面的值：(选填)</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="txt_service_description.Location" type="System.Drawing.Point, System.Drawing">
    <value>85, 59</value>
  </data>
  <data name="label16.Location" type="System.Drawing.Point, System.Drawing">
    <value>16, 62</value>
  </data>
  <data name="label16.Size" type="System.Drawing.Size, System.Drawing">
    <value>59, 12</value>
  </data>
  <data name="label16.Text" xml:space="preserve">
    <value>服务描述:</value>
  </data>
  <data name="label30.Text" xml:space="preserve">
    <value>服务在服务器的物理路径:</value>
  </data>
  <data name="label33.Text" xml:space="preserve">
    <value>Example: D:\www\test 【不填agent会自动使用创建一个路径】</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>注意:一旦该服务创建后您想修改以上的参数需要自己在服务器上删除该服务进行重新创建</value>
  </data>
  <data name="label3.Location" type="System.Drawing.Point, System.Drawing">
    <value>16, 93</value>
  </data>
  <data name="label3.Size" type="System.Drawing.Size, System.Drawing">
    <value>59, 12</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>启动类型:</value>
  </data>
  <data name="comboBox_service_start_type.Location" type="System.Drawing.Point, System.Drawing">
    <value>85, 87</value>
  </data>
  <data name="txt_service_param.Location" type="System.Drawing.Point, System.Drawing">
    <value>85, 117</value>
  </data>
  <data name="label4.Location" type="System.Drawing.Point, System.Drawing">
    <value>29, 117</value>
  </data>
  <data name="label4.Size" type="System.Drawing.Size, System.Drawing">
    <value>35, 12</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>参数:</value>
  </data>
  <data name="box_windows_service_nssm.Location" type="System.Drawing.Point, System.Drawing">
    <value>18, 40</value>
  </data>
  <data name="box_windows_service_nssm.Size" type="System.Drawing.Size, System.Drawing">
    <value>120, 16</value>
  </data>
  <data name="box_windows_service_nssm.Text" xml:space="preserve">
    <value>采用nssm安装服务</value>
  </data>
  <data name="label5.Location" type="System.Drawing.Point, System.Drawing">
    <value>144, 40</value>
  </data>
  <data name="label5.Size" type="System.Drawing.Size, System.Drawing">
    <value>119, 12</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>什么场景我该用nssm?</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>服务不存在需要创建</value>
  </data>
</root>